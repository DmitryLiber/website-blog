@mixin font($size, $line-height, $weight: null) {
  font-weight: $weight;
  font-size: $size;
  line-height: $line-height;
}

@mixin transition($property, $time, $transition) {
  transition: $property $time $transition;
}

@mixin center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin margin-rhythm {
  margin-bottom: $filler-2;

  @include mq($m) {
    margin-bottom: $filler-3;
  }

  @include mq($ms) {
    margin-bottom: $filler-4;
  }

  @include mq($l) {
    margin-bottom: $filler-6;
  }
}

@mixin reset-list() {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin variable-icon($icon, $width, $bgc, $height: '', $display: block) {
  display: $display;
  width: $width;
  background-color: $bgc;
  transition: background-color $time;
  content: '';
  mask: $icon no-repeat center / contain;

  @if $height != '' {
    height: $height;
  }

  @if $height == '' {
    aspect-ratio: 1;
  }
}

// == media queries
@mixin mq($canvas, $canvas2: null) {
  @if $canvas {
    @media only screen and (min-width: $canvas) {
      @content;
    }
  }
}

@mixin mq-range($canvas-min, $canvas-max) {
  @if $canvas-min and $canvas-max {
    @media only screen and (min-width: $canvas-min) and (max-width: ($canvas-max - 1)) {
      @content;
    }
  }
}

@mixin mq-max($canvas) {
  @if $canvas {
    @media only screen and (max-width: ($canvas - 1)) {
      @content;
    }
  }
}

@mixin mq-hover() {
  @media (hover: hover) {
    @content;
  }
}

@mixin pseudo($top, $left, $width, $height) {
  position: absolute;
  top: $top;
  left: $left;
  width: $width;
  height: $height;
  content: '';
}

@function cl($name, $opacity: false) {
  @if $opacity {
    @return rgba(var(--color-#{unquote($name)}--rgb), $opacity);
  } @else {
    @return var(--color-#{unquote($name)});
  }
}
